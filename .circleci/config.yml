# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6-browsers
      - image: circleci/mysql:5.7.27
        environment:
          MYSQL_DATABASE=notes_project
          MYSQL_USER=root
          MYSQL_PASSWORD=root
          MYSQL_ROOT_PASSWORD=root
          DEBUG=True
          SECRET_KEY=foo
          DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1] 192.168.99.110
          SQL_ENGINE=django.db.backends.mysql
          SQL_DATABASE=notes_project
          SQL_USER=root
          SQL_PASSWORD=root
          SQL_HOST=mysql
          SQL_PORT=3306
          DATABASE=mysql
          INSTALLED_APPS=debug_toolbar
          MIDDLEWARE=debug_toolbar.middleware.DebugToolbarMiddleware
          COMPOSE_TYPE=DEV

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: Migrate for unittest
          command: |
            . venv/bin/activate
            python manage.py makemigrations
            python manage.py migrate

      - run:
          name: Create superuser for unittest
          command: |
            . venv/bin/activate
            echo "from notes.models import Account; Account.objects.create_superuser('admin', '', 'admin')" | python manage.py shell

      - run:
          name: Run server in the background for selenium
          command: |
            . venv/bin/activate
            python manage.py runserver 8000
          background: true

      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            python manage.py test

      - store_artifacts:
          path: test-reports/
          destination: python_app

    workflows:
      version: 2
      build-deploy:
        jobs:
          - build